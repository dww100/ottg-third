- hosts: all

  tasks:

      - name: Install docker
        ansible.builtin.apt:
            name: docker.io
            state: latest
            update_cache: true
        become: true

      - name: Add our user to docker group, so we can run docker without sudo / become
        ansible.builtin.user:
            name: "{{ ansible_user }}"
            groups: docker
            append: true
        become: true

      - name: Reset ssh connection to pick up new group membership
        ansible.builtin.meta: reset_connection

      - name: Build container image locally
        community.docker.docker_image:
            name: superlists
            source: build
            state: present
            build:
                path: ..
                platform: linux/amd64
            force_source: true
        delegate_to: 127.0.0.1

      - name: Export container image locally
        community.docker.docker_image:
            name: superlists
            archive_path: /tmp/superlists-img.tar
            source: local
        delegate_to: 127.0.0.1

      - name: Copy container image to server
        ansible.builtin.copy:
            src: /tmp/superlists-img.tar
            dest: /tmp/superlists-img.tar

      - name: Import container image on server
        community.docker.docker_image:
            name: superlists
            load_path: /tmp/superlists-img.tar
            source: load
            force_source: true
            state: present

      - name: Ensure .secret-key file exists
        # the intention is that this only happens once per server
        ansible.builtin.copy:
            dest: ~/.secret-key
            content: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters') }}"
            mode: 0600
            force: false  # do not recreate file if it already exists.

      - name: Read secret key from file
        ansible.builtin.slurp:
            src: ~/.secret-key
        register: secret_key

      - name: Ensure db.sqlite3 file exists outside container
        ansible.builtin.file:
            path: "{{ ansible_env.HOME }}/db.sqlite3"
            state: touch
            owner: 1234 # so nonroot user inside container can write to it
        become: true

      - name: Run container
        community.docker.docker_container:
            name: superlists
            image: superlists
            state: started
            recreate: true
            env:
                DJANGO_DEBUG_FALSE: "1"
                DJANGO_SECRET_KEY: "{{ secret_key.content | b64decode }}"
                DJANGO_ALLOWED_HOST: "{{ inventory_hostname }}"
                DJANGO_DB_PATH: "/home/nonroot/db.sqlite3"
            mounts:
                - source: "{{ ansible_env.HOME }}/db.sqlite3"
                  target: /home/nonroot/db.sqlite3
                  type: bind
            ports: 80:8888

      - name: Run migration inside container
        community.docker.docker_container_exec:
            container: superlists
            command: ./manage.py migrate

